<script cols="2">
  import querySchemas from "../commons/query.c.ejs"
  import addSchema from "../commons/add.c.ejs"
  import updateSchema from "../commons/update.c.ejs"
  import delSchema from "../commons/delete.c.ejs"
  import formatterSchema from "../commons/formatter.c.ejs"
  export default [
    {
      type: "table",
      prop: "tableCols",
      label: "表格列",
      colspan: 2,
      schemas: [
        {
          type: "text",
          prop: "label",
          label: "表头",
          rules: {required: true, trigger: ["blur", "change"], message: "表头必须填写"}
        },
        {
          type: "text",
          prop: "prop",
          label: "后端字段",
          rules: {required: true, trigger: ["blur", "change"], message: "表头必须填写"}
        },
        {type: "text", prop: "width", label: "列宽", placeholder: "auto"},
        formatterSchema,
      ],
    },
    {
      type: "list",
      prop: "searchItems",
      label: "查询字段",
      colspan: 2,
      cols: 2,
      schemas: [
        {
          type: "text",
          prop: "label",
          label: "字段名",
          rules: {required: true, trigger: ["blur", "change"], message: "字段名必须填写"}
        },
        {
          type: "text",
          prop: "prop",
          label: "后端字段",
          rules: {required: true, trigger: ["blur", "change"], message: "后端字段必须填写"}
        },
        {
          type: "select",
          prop: "type",
          label: "类型",
          default: "text",
          options: [
            {label: "文本", value: "text"},
            {label: "下拉框", value: "select"},
          ],
          effect({ model }) {
            if (model.type === 'select') {
              return [
                {
                  type: "radio",
                  prop: "optionType",
                  label: "类型",
                  default: "fixed",
                  options: [
                    {label: "固定项", value: "fixed"},
                    {label: "接口", value: "api"},
                  ],
                  effect({model, schemas}) {
                    if (model.optionType === "api") {
                      return [
                        {type: "text", prop: "api", label: "接口地址",},
                        {type: "text", prop: "depProp", label: "关联后端字段", placeholder: "逗号分割，当这些字段有值时才调接口"}
                      ]
                    } else {
                      return [
                        {
                          type: "table",
                          prop: "options",
                          label: "选项",
                          colspan: 2,
                          schemas: [
                            {type: "text", prop: "label", label: "键",},
                            {type: "text", prop: "value", label: "值",},
                          ]
                        }
                      ]
                    }
                  }
                },
              ]
            }
          }
        },
      ]
    },
    ...querySchemas,
    addSchema,
    updateSchema,
    delSchema,
    {type: "switch", prop: "hasIndex", label: "序号", default: true},
    {type: "switch", prop: "hasPagination", label: "分页", default: true},
    {
      type: "switch",
      prop: "hasBatchDelete",
      label: "批量删除",
      effect({model, schemas}) {
        if (model.hasBatchDelete) {
          return [
            {
              type: "text",
              prop: "batchDeleteApi",
              label: "接口地址"
            }
          ]
        }
      }
    },
    {
      type: "switch",
      prop: "hasViewDetail",
      label: "查看详情",
      effect({model, schemas}) {
        if (model.hasViewDetail) {
          return [
            {
              type: "select",
              prop: "viewDetailType",
              label: "查看方式",
              default: "dialog",
              options: [
                { label: "弹窗", value: "dialog" },
                { label: "页面", value: "page" },
              ],
            },
            {
              type: "table",
              prop: "viewDetailFields",
              label: "查看字段",
              colspan: 2,
              schemas: [
                {type: "text", prop: "label", label: "字段名"},
                {type: "text", prop: "prop", label: "后端字段"},
                formatterSchema,
              ]
            }
          ]
        }
      }
    },
    {
      type: "switch",
      prop: "hasToggleEnable",
      label: "启用禁用",
      colspan: 2,
      effect({model, schemas}) {
        if (model.hasToggleEnable) {
          return [
            {
              type: "text",
              prop: "enableProp",
              label: "字段",
              default: "enable"
            },
            {
              type: "text",
              prop: "toggleEnableApi",
              label: "接口地址"
            }
          ]
        }
      }
    },
    {
      type: "switch",
      prop: "hasMove",
      label: "上移下移",
      effect({model, schemas}) {
        if (model.hasMove) {
          return [
            {
              type: "text",
              prop: "moveApi",
              label: "接口地址"
            }
          ]
        }
      }
    },
  ]
</script>