<script cols="2">
  [
    {
      type: "select",
      prop: "type",
      label: "类型",
      colspan: 2,
      default: "tree",
      options: [
        {label: "树", value: "tree"},
        {label: "列表", value: "list"},
      ]
    },
    {type: "text", prop: "api", label: "数据接口", colspan: 2},
    {
      type: "switch",
      prop: "hasAdd",
      label: "新增",
      colspan: 2,
      effect({model, schemas, resolveSchemas}) {
        if (model.hasAdd) {
          return {
            prop: "addForm",
            colspan: 2,
            schemas: resolveSchemas("dialog-form")
          }
        }
      }
    },
    {
      type: "switch",
      prop: "hasUpdate",
      label: "编辑",
      colspan: 2,
      effect({model, schemas, resolveSchemas}) {
        if (model.hasUpdate) {
          return {
            prop: "updateForm",
            colspan: 2,
            schemas: resolveSchemas("dialog-form")
          }
        }
      }
    },
    {
      type: "switch",
      prop: "hasDelete",
      label: "删除",
      effect({model, schemas}) {
        if (model.hasDelete) {
          return [
            {
              type: "text",
              prop: "deleteApi",
              label: "接口地址"
            }
          ]
        }
      }
    },
    {
      type: "table",
      prop: "components",
      label: "右侧组件",
      colspan: 2,
      schemas: [
        {type: "text", prop: "name", label: "组件id", colspan: 2},
        {
          type: "list",
          label: "配置组件",
          width: 70,
          dialogWidth: 800,
          schemas: [
            {
              type: "select",
              label: "选择组件",
              prop: "schemaId",
              options: [],
              async getOptions({ getAllSchemas }) {
                return (await getAllSchemas()).map(d => ({ label: d.name, value: d.id} ))
              },
              effect({model, resolveSchemas}) {
                if (model.schemaId) {
                  return {
                    prop: "itemSchemas",
                    key: model.schemaId,
                    schemas: resolveSchemas(model.schemaId)
                  }
                }
              }
            }
          ]
        }
      ]
    },
  ]
</script>

